* Transformador XML Online
  http://www.freeformatter.com/
* Sobre XSL
** XSL tem duas partes: que funcionam independentemente uma parte que lida 
com a transformação e outra que lida com a formatação. Não obrigatoriamente um
documento escrito em XSL formating objects foi gerado pela parte que lida com 
transformações do XSL.
** XSL é composto então por duas linguagens a de transformação e a de formatação.
* Overview on XSLT
** Um processador XSLT le dois arquivos, um XSLT style sheet e XML document e baseado
nas instruções do XSLT style sheet esse gera um novo XML document. Um processador XSLT também
pode gerar HTML.
** Um processador XSLT modela um documento XML como uma arvore que pode conter 7 tipos de nós:
*** Raiz
*** Elementos
*** Texto
*** Atributos
*** Namespaces
*** Instruções de processamento
*** Comentários
** O DTD (Document Type Definition) e o document type declaration não são incluidos nessa árvore.
No entanto o DTD pode definir novos atribute values para os elementos os quais se tornam novos nós de atributos.
* Exemplo da Tabela Periodica
** Dado um XML:
<?xml version="1.0"?>
<?xml-stylesheet type="text/xml" href="17-2.xsl"?>
<PERIODIC_TABLE>
  <ATOM STATE="GAS">
    <NAME>Hydrogen</NAME>
    <SYMBOL>H</SYMBOL>
    <ATOMIC_NUMBER>1</ATOMIC_NUMBER>
    <ATOMIC_WEIGHT>1.00794</ATOMIC_WEIGHT>
    <BOILING_POINT UNITS="Kelvin">20.28</BOILING_POINT>
    <MELTING_POINT UNITS="Kelvin">13.81</MELTING_POINT>
    <DENSITY UNITS="grams/cubic centimeter">
      <!-- At 300K, 1 atm -->
      0.0000899
    </DENSITY>
  </ATOM>
  <ATOM STATE="GAS">
    <NAME>Helium</NAME>
    <SYMBOL>He</SYMBOL>
    <ATOMIC_NUMBER>2</ATOMIC_NUMBER>
    <ATOMIC_WEIGHT>4.0026</ATOMIC_WEIGHT>
    <BOILING_POINT UNITS="Kelvin">4.216</BOILING_POINT>
    <MELTING_POINT UNITS="Kelvin">0.95</MELTING_POINT>
    <DENSITY UNITS="grams/cubic centimeter"><!-- At 300K -->
      0.0001785
    </DENSITY>
  </ATOM>
</PERIODIC_TABLE>
** Esse XML pode ser interpretado da seguinte forma:
Existe um Root node o qual contém dois filhos um *root element* chamado "PERIODIC_TABLE" e um
*processing instruction* <xml_stylesheet>.
A <PERIODIC_TABLE> contém dois nós filhos ambos *element* <ATOM>. E assim por diante ...
** XSLT atua basicamente transformando uma XML tree em outra.
** XSLT foi criado para lidar com XML tanto no input como no output.
* XSLT style sheet documents
** Workflow do processador XSLT:
XSLT contém template rules. Uma template rule tem padrões que especificam os nós
que combinam e o template que deve ser instanciado quando esse padrão é encontrado.
Quando um processador XSLT transforma um arquivo XML, ele percorre a arvore olhando cada nó.
Quando o nó combina o padrão template rule o processador outputa the rule`s template.
** XSLT usa XML para descrever essas regras, templates e padrões.
*** *obs*: o prefixo xsl deve ser mapeado como: http://www.w3.org/1999/XSL/Transform namespace  
** Exemplo XSLT style sheet com 2 template rules
<?xml version="1.0"?>
<xsl:stylesheet version="1.0" 
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:template match="PERIODIC_TABLE">
    <html>
      <xsl:apply-templates/>
    </html>
  </xsl:template>
  <xsl:template match="ATOM">
    <P>
      <xsl:apply-templates/>
    </P>
  </xsl:template>
 </xsl:stylesheet>
** Coisas a se notar sobre esse pedaço de código 
  1) Cada template rule é um xsl:template element.
  2) O padrão fica no atributo match.
  3) O output é o conteúdo do xsl:template element.
  4) Os elementos que tem o prefixo xsl: não são parte da arvore resultante.
  5) O elemento <PERIODIC_TABLE> está sendo substituido pelo elemento <html>.
  6) xsl:apply-templates insere o texto(_não o markup_) da fonte combinada no atributo "match" no output.
  7) <xsl:stylesheet version="1.0" 
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform">    Esses elementos devem ter esses valores
 
** Assim o XML produzido será:
<?xml version="1.0" encoding="UTF-8"?>
<html>
   <P>Hydrogen
    H
    1
    1.00794
    20.28
    13.81
    
      
      0.0000899</P>
   <P>Helium
    He
    2
    4.0026
    4.216
    0.95
    
      0.0001785</P>
</html> 
* Sintaxe

* 
er
*** <?xml version="1.0" ?>
    Indica a versao do xml a ser usada. Opcional, porém recomendado.
*** <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    xsl:stylesheet é o elemento raiz (root) do xslt. ele possui 2 atributos
    principais: a versão e o namespace a ser usado. o namespace é o do
    w3. 
** Footer
*** </xsl:stylesheet>
    Fecha o stylesheet aberto no header
** Body
*** O corpo do xslt fica dentro da tag <xsl:stylesheet>
*** Ele é composto de inúmeros elementos, que dizem comandos a
    serem executados pelo conversor mais tarde. Lembrando: um elemento é 
    uma tag, e cada elemento contém atributos dentro dessa tag.Em <xml *version=1.0* >
    version é um atributo.
*** Elementos importantes
**** [[http://www.w3schools.com/xsl/el_apply-imports.asp][Referência de Elementos]]

* EGGHTG
** GHDFGFDG
*** ISSO É SOBRE
